name: Check patch

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: centos-stream-8
            shortcut: cs8
            container-name: el8stream
          - name: centos-stream-9
            shortcut: cs9
            container-name: el9stream
    name: ${{ matrix.name }}
    container:
      image: quay.io/ovirt/buildcontainer:${{ matrix.container-name }}
    env:
      ARTIFACTS_DIR: exported-artifacts
    steps:
    - name: Install dependencies
      run: dnf install -y --setopt=tsflags=nodocs rpm-sign dnf-plugin-versionlock dnf-utils python3-coverage python3-pycodestyle python3-pyflakes python3-devel python3-coverage

    - uses: ovirt/checkout-action@main

    - name: autopoint
      run: autopoint

    - name: autoreconf -ivf
      run: autoreconf -ivf

    - name: configure
      run: ./configure

    - name: run distcheck
      run: make -j distcheck

    - name: make dist
      run: make dist

    - name: mkdir tmp.repos
      run: mkdir -p tmp.repos

    - name: rpmbuild
      run: rpmbuild -D "_topdir $PWD/tmp.repos" -D "release_suffix .$(date -u +%Y%m%d%H%M%S).git$(git rev-parse --short HEAD)" -ta otopi-*.tar.gz

    - name: Collect artifacts
      run: |
          mkdir -p ${ARTIFACTS_DIR}
          find tmp.repos -iname \*rpm -exec mv "{}" ${ARTIFACTS_DIR} \;
          mv ./*tar.gz ${ARTIFACTS_DIR}

    - name: Run checks
      run: automation/run-checks.sh

    - name: Upload artifacts
      uses: ovirt/upload-rpms-action@v2
      with:
        directory: ${{ env.ARTIFACTS_DIR }}
